<launch>
    <arg name="output" default="screen"/>
    
    <rosparam param="mm_to_pixel">12</rosparam>

    <rosparam file="$(find adaptive_ctrl)/config/threshold_vals.yaml" />

    <rosparam param="cam_width">1088</rosparam>
    <rosparam param="cam_height">996</rosparam>
    <rosparam param="cam_offset_x">416</rosparam>
    <rosparam param="cam_offset_y">130</rosparam>

    <include file="$(find pylon_camera)/launch/pylon_camera_node.launch"/>

    <node name="image_fetcher" pkg="adaptive_ctrl" type="image_fetcher.py" output="$(arg output)"/>
    <node name="image_processsor" pkg="adaptive_ctrl" type="image_processor.py" output="$(arg output)"/>
    <node name="find_insertion_point" pkg="adaptive_ctrl" type="find_insertion_point.py" output="$(arg output)"/>
    <node name="process_costmap" pkg="adaptive_ctrl" type="process_costmap.py" output="$(arg output)"/>
    <node name="discretise_path" pkg="adaptive_ctrl" type="discretise_path.py" output="$(arg output)"/>
    <node name="isolate_tentacle" pkg="adaptive_ctrl" type="isolate_tentacle.py" output="$(arg output)"/>
    <node name="tentacle_extractor" pkg="adaptive_ctrl" type="tentacle_extractor" output="$(arg output)"/>

    <node name="path_to_angle" pkg="adaptive_ctrl" type="discretising_node.py" output="$(arg output)">
        <param name="angle_pub_type" value="des_"/>
    </node>
    <node name="cline_to_angle" pkg="adaptive_ctrl" type="discretising_node.py" output="$(arg output)">
        <param name="angle_pub_type" value="obv_"/>
    </node>

    <!-- <node name="high_controller" pkg="adaptive_ctrl" type="high_controller" output="$(arg output)"/> -->

    <node name="control_node" pkg="adaptive_ctrl" type="control_node" output="screen" />
    <!-- <include file="$(find adaptive_ctrl)/launch/precomputation.launch"/> -->
    <include file="$(find adaptive_ctrl)/launch/path_planner.launch"/>

    <include file="$(find ring_ctrl)/launch/stepper.launch"/>

    <node type="transform_camera_frame.py" name="transform_camera_frame" pkg="adaptive_ctrl" output="$(arg output)"/>
    <node type="rviz" name="rviz" pkg="rviz" args="-d $(find adaptive_ctrl)/rviz/occ_map_v2.rviz"/>
</launch>